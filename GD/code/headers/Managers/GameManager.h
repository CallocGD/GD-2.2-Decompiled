#include "../includes.h"

#pragma once

/* ===== GameManager Game Variable Names =================================================
 * I'm going to simplify the game varaible names to kGJGameVar instead of kGJGV 
 * for the sake of readability enhancements because something like kGJGVRandomOption001 
 * as seen one of Robtop's Twitch Streams is not readable enough in my eyes...  
 * as long as it compiles the same as GD I am fine with using these constant expressions 
 * otherwise we will resort to macros immediately */

constexpr const char* kGJGameVarFollowPlayLayerEditor = "0001";     
constexpr const char* kGJGameVarPlayMusicEditor = "0002";
constexpr const char* kGJGameVarSwipeEditor = "0003";
constexpr const char* kGJGameVarFreeMoveEditor = "0004";
constexpr const char* kGJGameVarDeleteFilterEditor = "0005";        
constexpr const char* kGJGameVarDeleteCustomObjectIDEditor = "0006";
constexpr const char* kGJGameVarToggleRotateEditor = "0007";        
constexpr const char* kGJGameVarToggleSnapEditor = "0008";
constexpr const char* kGJGameVarIgnoreDamageEditor = "0009";        
constexpr const char* kGJGameVarFlipToPlayerControls = "0010";      
constexpr const char* kGJGameVarAlwaysLimitControls = "0011";       
constexpr const char* kGJGameVarShowedCommentingRules = "0012";     
constexpr const char* kGJGameVarIncreaseMaxUndoRedo = "0013";       
constexpr const char* kGJGameVarDisableExplosionShake = "0014";     
constexpr const char* kGJGameVarFlipPauseButton = "0015";
constexpr const char* kGJGameVarShowedSongTOS = "0016";
constexpr const char* kGJGameVarNoSongLimit = "0018";
constexpr const char* kGJGameVarSongsInMemory = "0019";
constexpr const char* kGJGameVarHigherAudioQuality = "0022";
constexpr const char* kGJGameVarSmoothFix = "0023";
constexpr const char* kGJGameVarShowCursorInGame = "0024";
constexpr const char* kGJGameVarWindowedMode = "0025";
constexpr const char* kGJGameVarAutoRetry = "0026";
constexpr const char* kGJGameVarAutoCheckpoints = "0027";
constexpr const char* kGJGameVarDisableThumbstick = "0028";
constexpr const char* kGJGameVarShowedOptionsText = "0029";
constexpr const char* kGJGameVarVsyncEnabled = "0030";
constexpr const char* kGJGameVarCallGLFinish = "0031";
constexpr const char* kGJGameVarForceTimerEnabled = "0032";
constexpr const char* kGJGameVarChangeSongPath = "0033";
constexpr const char* kGJGameVarGameCenterEnabled = "0034";
constexpr const char* kGJGameVarPreviewModeEditor = "0036";
constexpr const char* kGJGameVarShowGroundEditor = "0037";
constexpr const char* kGJGameVarShowGridEditor = "0038";
constexpr const char* kGJGameVarGridOnTopEditor = "0039";
constexpr const char* kGJGameVarShowPercentage = "0040";
constexpr const char* kGJGameVarShowObjectInfoEditor = "0041";
constexpr const char* kGJGameVarIncreaseMaxLevels = "0042";
constexpr const char* kGJGameVarEffectLinesEnabledEditor = "0043";
constexpr const char* kGJGameVarDrawTriggerBoxesEditor = "0044";
constexpr const char* kGJGameVarDebugDrawEditor = "0045";
constexpr const char* kGJGameVarHideUIOnTestEditor = "0046";
constexpr const char* kGJGameVarShowedProfileText = "0047";
constexpr const char* kGJGameVarViewedOwnProfile = "0048";
constexpr const char* kGJGameVarButtonsPerRowEditor = "0049";
constexpr const char* kGJGameVarButtonRowsEditor = "0050";
constexpr const char* kGJGameVarShowedNGMessageEditor = "0051";
constexpr const char* kGJGameVarFastPracticeReset = "0052";
constexpr const char* kGJGameVarFreeGamesPopup = "0053";
constexpr const char* kGJGameVarCheckIfServerOnline = "0055";
constexpr const char* kGJGameVarDisableObjectAlert = "0056";
constexpr const char* kGJGameVarEditorHoldToSwipe = "0057";
constexpr const char* kGJGameVarDurationLinesEditor = "0058";
constexpr const char* kGJGameVarSwipeCycleMode = "0059";
constexpr const char* kGJGameVarDefaultMiniIcon = "0060";
constexpr const char* kGJGameVarSwitchSpiderTeleportColor = "0061";
constexpr const char* kGJGameVarSwitchDashFireColor = "0062";
constexpr const char* kGJGameVarShowedUnverifiedCoinsMessage = "0063";
constexpr const char* kGJGameVarSelectFilterEditor = "0064";
constexpr const char* kGJGameVarEnableMoveOptimization = "0065";
constexpr const char* kGJGameVarHighCapacityMode = "0066";
constexpr const char* kGJGameVarHighStartPosAccuracy = "0067";
constexpr const char* kGJGameVarQuickCheckpointMode = "0068";
constexpr const char* kGJGameVarCommentMode = "0069";
constexpr const char* kGJGameVarShowedUnlistedLevelMessage = "0070";
constexpr const char* kGJGameVarDisableGravityEffect = "0072";
constexpr const char* kGJGameVarNewCompletedFilter = "0073";
constexpr const char* kGJGameVarShowRestartButton = "0074";
constexpr const char* kGJGameVarDisableComments = "0075";
constexpr const char* kGJGameVarDisableAccountComments = "0076";
constexpr const char* kGJGameVarFeaturedLevelsOnly = "0077";
constexpr const char* kGJGameVarHideBackgroundEditor = "0078";
constexpr const char* kGJGameVarHideGridOnPlayEditor = "0079";
constexpr const char* kGJGameVarDisableShakeEffects = "0081";
constexpr const char* kGJGameVarDisableHighObjectAlert = "0082";
constexpr const char* kGJGameVarDisableSongAlert = "0083";
constexpr const char* kGJGameVarManualOrder = "0084";
constexpr const char* kGJGameVarSmallCommentsMode = "0088";
constexpr const char* kGJGameVarExtendedInfoMode = "0089";
constexpr const char* kGJGameVarAutoloadComments = "0090";
constexpr const char* kGJGameVarMyLevelsFolderNumber = "0091";
constexpr const char* kGJGameVarOnlineLevelsFolderNumber = "0092";
constexpr const char* kGJGameVarIncreaseLocalLevelsPerPage = "0093";
constexpr const char* kGJGameVarMoreCommentsMode = "0094";
constexpr const char* kGJGameVarFlippyUselessModeJustDont = "0095";
constexpr const char* kGJGameVarSwitchWaveTrailColor = "0096";
constexpr const char* kGJGameVarEnableLinkControlsEditor = "0097";
constexpr const char* kGJGameVarLevelLeaderboardType = "0098";
constexpr const char* kGJGameVarShowLeaderboardPercent = "0099";
constexpr const char* kGJGameVarPracticeDeathEffect = "0100";
constexpr const char* kGJGameVarForceSmoothFix = "0101";
constexpr const char* kGJGameVarSmoothFixInEditor = "0102";
constexpr const char* kGJGameVarLayerLocking = "0103";
constexpr const char* kGJGameVarRecordOrder = "0104";
constexpr const char* kGJGameVarStartPosPlayback = "0105";
constexpr const char* kGJGameVarShowMeltdownPromo = "0106";
constexpr const char* kGJGameVarAutoLowDetail = "0108";
constexpr const char* kGJGameVarLevelInfoLabel = "0109";
constexpr const char* kGJGameVarFastEditorPreview = "0110";
constexpr const char* kGJGameVarFlipPlatformerControls = "0113";
constexpr const char* kGJGameVarShowFPS = "0115";
constexpr const char* kGJGameVarUseCustomFPS = "0116";
constexpr const char* kGJGameVarPreviewParticle = "0117";
constexpr const char* kGJGameVarPreviewAnimation = "0118";
constexpr const char* kGJGameVarDisableLevelSaving = "0119";
constexpr const char* kGJGameVarHideAttemptsInNormalGamePlay = "0134";
constexpr const char* kGJGameVarExtraLowDetail = "0136";
constexpr const char* kGJGameVarSaveGauntlets = "0127";
constexpr const char* kGJGameVarDisablePortalGuide = "0129";
constexpr const char* kGJGameVarEnableOrbGuide = "0130";
constexpr const char* kGJGameVarDisableOrbScale = "0140";
constexpr const char* kGJGameVarReduceQuality = "0142";
constexpr const char* kGJGameVarDisableShaderAliasing = "0155";
constexpr const char* kGJGameVarAudioFix01 = "0159";
constexpr const char* kGJGameVarConfirmExit = "0167";
constexpr const char* kGJGameVarFastMenu = "0168";
constexpr const char* kGJGameVarDisablePlayerHitBox = "0171";



class GameManager : public GManager
{
public:
	/* Controls Internal Game Variables Robtop Likely has all these strings as Macros... - Calloc */

	cocos2d::CCDictionary* m_unkAnimationDict;
	cocos2d::CCDictionary* m_unkAnimationDict2;
	cocos2d::CCDictionary* m_frameTimeForAnimation;
	cocos2d::CCDictionary* m_framesForAnimation;
	cocos2d::CCDictionary* m_defaultFrames;
	bool m_switchModes;
	bool m_toFullscreen;
	bool m_reloading;
	bool m_unkBool1;
	bool m_unkBool2;
	bool m_vsyncEnabled;
	cocos2d::CCDictionary* m_valueKeeper;
	cocos2d::CCDictionary* m_unlockValueKeeper;
	cocos2d::CCDictionary* m_customObjectDict;
	double m_adTimer;
	double m_adCache;
	bool m_unkBool3;
	int m_unkSize4_1;
	double m_unkDouble2;
	int m_unkSize4_2;
	int m_unkSize4_3;
	bool m_loaded;
	bool m_googlePlaySignedIn;
	std::string m_unknownString;
	int m_unkSize4_4;
	PlayLayer* m_playLayer;
	LevelEditorLayer* m_levelEditorLayer;
	GJBaseGameLayer* m_gameLayer;
	void* m_unkPtr;
	MenuLayer* m_menuLayer;
	bool m_inMenuLayer;
	void* m_unknownVariable;
	bool m_unknownBool3;
	bool m_unknownPlayLayerBool;
	bool m_unknownBool4;
	bool m_unknownBool5;
	std::string m_playerUDID;
	std::string m_playerName;
	bool m_commentsEnabled;
	int m_playerUserID_Random;
	int m_playerUserID_Seed;
	int m_playerUserID;
	float m_bgVolume;
	float m_sfxVolume;
	float m_timeOffset;
	bool m_ratedGame;
	bool m_clickedFacebook;
	bool m_clickedTwitter;
	bool m_clickedYouTube;
	bool m_clickedTwitch;
	bool m_clickedDiscord_;
	bool m_clickedReddit;
	double m_socialsDuration;
	bool m_showedAd;
	bool m_unknownBool;
	bool m_editorEnabled;
	int m_sceneEnum;
	bool m_searchObjectBool;

	/* TODO: Ask Robtop About RSV Values and how they are actually made, geode uses Structs and not this
	 * so understanding what is actually going on is imporantant to me - Calloc 
	 */
	int m_playerFrame_Random;
	int m_playerFrame_Seed;
	int m_playerFrame;
	int m_playerShip_Random;
	int m_playerShip_Seed;
	int m_playerShip;
	int m_playerBall_Random;
	int m_playerBall_Seed;
	int m_playerBall;
	int m_playerBird_Random;
	int m_playerBird_Seed;
	int m_playerBird;
	int m_playerDart_Random;
	int m_playerDart_Seed;
	int m_playerDart;
	int m_playerRobot_Random;
	int m_playerRobot_Seed;
	int m_playerRobot;
	int m_playerSpider_Random;
	int m_playerSpider_Seed;
	int m_playerSpider;
	int m_playerSwing_Random;
	int m_playerSwing_Seed;
	int m_playerSwing;
	int m_playerColor_Random;
	int m_playerColor_Seed;
	int m_playerColor;
	int m_playerColor2_Random;
	int m_playerColor2_Seed;
	int m_playerColor2;
	int m_playerGlowColor_Random;
	int m_playerGlowColor_Seed;
	int m_playerGlowColor;
	int m_playerStreak_Random;
	int m_playerStreak_Seed;
	int m_playerStreak;
	int m_playerShipFire_Random;
	int m_playerShipFire_Seed;
	int m_playerShipFire;
	int m_playerDeathEffect_Random;
	int m_playerDeathEffect_Seed;
	int m_playerDeathEffect;
	int m_playerJetpack_Random;
	int m_playerJetpack_Seed;
	int m_playerJetpack;
	// geode::SeedValueSR m_chk;  // TODO: Fix this...
	// geode::SeedValueSR m_secretNumber;  // TODO: Fix this...
	bool m_playerGlow;
	IconType m_playerIconType;
	bool m_everyPlaySetup;
	bool m_showSongMarkers;
	bool m_showBPMMarkers;
	bool m_recordGameplay;
	bool m_showProgressBar;
	bool m_performanceMode;
	bool m_unkBool4;
	bool m_clickedGarage;
	bool m_clickedEditor;
	bool m_clickedName;
	bool m_clickedPractice;
	bool m_showedEditorGuide;
	bool m_showedRateDiffDialog;
	bool m_showedRateStarDialog;
	bool m_showedLowDetailDialog;
	void* m_unkPtr2;
	void* m_unkPtr3;
	int m_unkSize4_5;
	int m_unkSize4_6;
	int m_unkSize4_7;
	int m_unkSize4_8;
	int m_loadedBgID;
	int m_loadedGroundID;
	int m_loadedMG;
	int m_loadedFont;
	int m_loadedDeathEffect;
	bool m_loadingBG;
	bool m_loadingG;
	bool m_loadingG1;
	bool m_finishedLoadingG1;
	bool m_shouldLoadG1;
	bool m_finishedLoadingMG1;
	bool m_finishedLoadingMG2;
	bool m_unkBool5;
	int m_unkSize4_9;
	int m_unkSize4_10;
	int m_unkSize4_11;
	int m_bootups;
	bool m_hasRatedGame;
	bool m_unkBool6;
	bool m_shouldLoadUnlockValueKeeper;
	bool m_unkBool7;
	bool m_unkBool8;
	int m_hasRP_Random;
	int m_hasRP_Seed;
	int m_hasRP;
	bool m_canGetLevelSaveData;
	int m_resolution;
	int m_texQuality;
	bool m_somethingInMenuLayer;
	void* m_unkPtr4;
	bool m_unkBool9;
	int m_unkSize4_12;
	int m_unkSize4_13;
	bool m_unkBool10;
	int m_unkSize4_14;
	bool m_disableThumbstick;
	float m_customFPSTarget;
	bool m_unkBool11;
	int m_customMenuSongID;
	int m_customPracticeSongID;
	std::map<int, int> m_loadIcon;
	std::map<int, std::map<int, int>> m_loadIcon2;
	std::map<int, bool> m_probablyIsIconLoaded;
	void* m_somethingIconAndTypeForKey;
	void* m_somethingKeyForIcon;
	void* m_idk;
	std::map<int, cocos2d::CCObject*> m_iconDelegates;
	int m_iconRequestID;
	cocos2d::CCArray* m_unkArray;
	void* m_someAdPointer;
	int m_unkSize4_15;
	int m_unkSize4_16;
	int m_unkSize4_17;
	UIButtonConfig m_dpad1;
	UIButtonConfig m_dpad2;
	UIButtonConfig m_dpad3;
	UIButtonConfig m_dpad4;
	UIButtonConfig m_dpad5;
	std::string m_dpadLayout1;
	std::string m_dpadLayout2;
	std::string m_dpadLayout3;
	std::string m_dpadLayoutDual1;
	std::string m_dpadLayoutDual2;
	std::string m_dpadLayoutDual3;
	int m_unkSize4_18;
	int m_unkSize4_19;
	int m_unkSize4_20;
	bool m_unkBool12;


	void accountStatusChanged();
	int getIntGameVariable(const char* key);
	int activeIconForType(IconType icontype);
	void setGameVariable (char * key, bool flag);
	void fadeInMenuMusic();

	bool init(){};
	bool getGameVariable (char * _key);


	void setPlayerBall(int playerBall);
	void setPlayerBird(int playerBird);
	void setPlayerColor(int playerColor);
	void setPlayerColor2(int playerColor2);
	void setPlayerColor3(int playerGlowColor);
	void setPlayerDart(int playerDart);
	void setPlayerDeathEffect(int playerDeathEffect);
	void setPlayerFrame(int playerFrame);
	void setPlayerJetpack(int playerJetpack);
	void setPlayerRobot(int playerRobot);
	void setPlayerShip(int playerShip);
	void setPlayerShipStreak(int playerShipStreak);
	void setPlayerSpider(int playerSpider);
	void setPlayerStreak(int playerStreak);
	void setPlayerSwing(int playerSwing);
	void setPlayerUserID(int playerUserID);
	static GameManager* sharedState(){};
	 
};
